CREATE TABLE CLIENTES
(
ID INT PRIMARY KEY IDENTITY,
NOME VARCHAR(70) NOT NULL,
CPF CHAR(11) NOT NULL,
RG CHAR(7) NOT NULL,
TELEFONE CHAR(11) NOT NULL,
CELULAR  CHAR(11) NOT NULL,
EMAIL VARCHAR (50) NOT NULL,
DATACRIACAO DATETIME NOT NULL DEFAULT GETDATE(),
CONSTRAINT UQ_CLIENTES_CPF UNIQUE (CPF),
CONSTRAINT UQ_CLIENTES_RG UNIQUE (RG),
CONSTRAINT UQ_CLIENTES_EMAIL UNIQUE (EMAIL)
)


CREATE TABLE FUNCIONARIOS
(
ID INT PRIMARY KEY IDENTITY,
NOME VARCHAR(70) NOT NULL,
CPF CHAR(11) NOT NULL,
RG CHAR(7) NOT NULL,
CEP CHAR(8) NOT NULL,
RUA VARCHAR(100) NOT NULL,
BAIRRO VARCHAR(50) NOT NULL,
CIDADE VARCHAR(50) NOT NULL,
NUMERO VARCHAR(5) NOT NULL,
COMPLEMENTO VARCHAR(20) NOT NULL,
TELEFONE CHAR(11) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
SENHA VARCHAR(15) NOT NULL,
ISADM BIT NOT NULL,
ATIVO BIT NOT NULL,

CONSTRAINT UQ_FUNCIONARIOS_CPF UNIQUE (CPF),
CONSTRAINT UQ_FUNCIONARIOS_RG UNIQUE (RG),
CONSTRAINT UQ_FUNCIONARIOS_EMAIL UNIQUE (EMAIL)
)

CREATE TABLE FORNECEDORES
(
ID INT PRIMARY KEY IDENTITY,
RAZAO_SOCIAL VARCHAR(100) NOT NULL,
CNPJ CHAR(14) NOT NULL,
NOME_CONTATO VARCHAR(70),
TELEFONE CHAR(11) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
ATIVO BIT NOT NULL,

CONSTRAINT UQ_FORNECEDORES_CNPJ UNIQUE (CNPJ),
CONSTRAINT UQ_FORNECEDORES_EMAIL UNIQUE (EMAIL)
)

CREATE TABLE PRODUTOS
(
ID INT PRIMARY KEY IDENTITY,
NOME VARCHAR(50) NOT NULL,
DESCRICAO VARCHAR(70) NOT NULL,
PRECO FLOAT NOT NULL,
QTD_ESTOQUE INT NOT NULL,
ATIVO BIT NOT NULL,
)

CREATE TABLE ENTRADA_PRODUTOS
(
ID INT PRIMARY KEY IDENTITY,
DATAENTRADA DATETIME NOT NULL,
IDFUNCIONARIO INT NOT NULL,
FORNECEDOR_ID INT NOT NULL,
VALORTOTAL FLOAT NOT NULL,
CONSTRAINT FK_ENTRADA_PRODUTOS_FUNCIONARIO FOREIGN KEY (IDFUNCIONARIO) REFERENCES
FUNCIONARIOS,
CONSTRAINT FK_ENTRADA_PRODUTOS_FORNECEDOR FOREIGN KEY (FORNECEDOR_ID) REFERENCES
FORNECEDORES
)

CREATE TABLE ITENS_ENTRADA_PRODUTOS
(
IDENTRADA INT NOT NULL,
IDPRODUTO INT NOT NULL,
QUANTIDADE INT NOT NULL,
PRECO FLOAT NOT NULL,
CONSTRAINT FK_ITENS_ENTRADA_ENTRADA_PRODUTOS FOREIGN KEY (IDENTRADA) REFERENCES
ENTRADA_PRODUTOS,
CONSTRAINT FK_ITENS_ENTRADA_PRODUTOS FOREIGN KEY (IDPRODUTO) REFERENCES
PRODUTOS
)

CREATE TABLE SAIDA_PRODUTOS
(ID INT PRIMARY KEY IDENTITY,
DATASAIDA DATETIME NOT NULL,
IDFUNCIONARIO INT NOT NULL,
VALORTOTAL FLOAT NOT NULL
CONSTRAINT FK_SAIDA_PRODUTOS_FUNCIONARIO FOREIGN KEY (IDFUNCIONARIO) REFERENCES
FUNCIONARIOS)

CREATE TABLE ITENS_SAIDA_PRODUTOS
(
IDSAIDA INT NOT NULL,
IDPRODUTO INT NOT NULL,
QUANTIDADE INT NOT NULL,
PRECO FLOAT NOT NULL,
CONSTRAINT FK_ITENS_SAIDA_SAIDA_PRODUTOS FOREIGN KEY (IDSAIDA) REFERENCES
SAIDA_PRODUTOS,
CONSTRAINT FK_ITENS_SAIDA_PRODUTOS FOREIGN KEY (IDPRODUTO) REFERENCES
PRODUTOS)



CREATE TABLE QUARTOS
(
ID INT PRIMARY KEY IDENTITY,
NUMERO VARCHAR(50) NOT NULL,
CAPACIDADE INT NOT NULL, 
ESTA_OCUPADO BIT NOT NULL,

)

CREATE TABLE CHECK_IN
(
ID INT PRIMARY KEY IDENTITY,
DATA_ENTRADA DATETIME2  DEFAULT GETDATE()NOT NULL,
DATA_PREVISTA_SAIDA DATETIME2 NOT NULL,
CLIENTE_ID INT NOT NULL,
QUARTO_ID INT NOT NULL,
FUNCIONARIO_ID INT NOT NULL,
CONSTRAINT FK_CHECKIN_CLIENTES FOREIGN KEY (CLIENTE_ID)
REFERENCES CLIENTES,
CONSTRAINT FK_CHECKIN_QUARTOS FOREIGN KEY (QUARTO_ID)
REFERENCES QUARTOS,
CONSTRAINT FK_CHECKIN_FUNCIONARIO FOREIGN KEY (FUNCIONARIO_ID)
REFERENCES FUNCIONARIOS,
)

ALTER TABLE FUNCIONARIOS ADD  ESTADO INT NOT NULL;

ALTER TABLE QUARTOS ADD PRECO FLOAT NOT NULL;

ALTER TABLE QUARTOS ADD CLIENTE_ID INT NOT NULL, 
CONSTRAINT FK_QUARTO_CLIENTE FOREIGN KEY (CLIENTE_ID)
REFERENCES CLIENTES;




CREATE TABLE CHECK_OUT
(
ID INT PRIMARY KEY IDENTITY,
DATA_SAIDA DATETIME2 NOT NULL,
VALOR_TOTAL FLOAT NOT NULL,
QUARTO_ID INT NOT NULL,
PRODUTO_ID INT NOT NULL,
CLIENTE_ID INT NOT NULL,
FUNCIONARIO_ID INT NOT NULL,
CHECK_IN_ID INT NOT NULL,

CONSTRAINT FK_CHECKOUT_QUARTO FOREIGN KEY (QUARTO_ID)
REFERENCES QUARTOS,
CONSTRAINT FK_CHECKOUT_PRODUTO FOREIGN KEY (PRODUTO_ID)
REFERENCES PRODUTOS,
CONSTRAINT FK_CHECKOUT_CLIENTE FOREIGN KEY (CLIENTE_ID)
REFERENCES CLIENTES,
CONSTRAINT FK_CHECKOUT_CHECKIN FOREIGN KEY (CHECK_IN_ID)
REFERENCES CHECK_IN,
CONSTRAINT FK_CHECKOUT_FUNCIONARIO FOREIGN KEY (FUNCIONARIO_ID)
REFERENCES FUNCIONARIOS,
)

 

